/*
time complexity of this algorithm using hashing is
o(n) time.
*/
#include<bits/stdc++.h>
using namespace std;
void pairsum(vector<int>arr,int sum)
{
    //logic
    unordered_set<int>s;
    /*
    as s.find(),s.insert have order of o(1) time.
     for loop has o(n) time,so the
     overall 
    complexity is o(n)
    */
    for(int i=0;i<arr.size();i++)
    {
        int x=sum-arr[i];
        if(s.find(x)!=s.end())
        {
            cout<<x<<"   "<<arr[i]<<endl;
        }
        //insert the current no inside element
        s.insert(arr[i]);
    }
}
int main()
{
    /*
    pair sum problem
    print pairs whose sum is equal to k
    */
    vector<int>arr{10,5,2,3,-6,9,11};
    int s=4;
    pairsum(arr,s);
    return 0;
}
